{
  "openapi": "3.1.0",
  "info": {
    "title": "Healthcare Simulation API",
    "description": "API for healthcare simulation with integrated Ollama medical LLM model (phi_lora_3b_medical_healthcaremagic_gguf)",
    "version": "0.3.0",
    "contact": {
      "name": "Healthcare Simulation Team",
      "url": "https://healthcare-simulation-api.onrender.com"
    }
  },
  "servers": [
    {
      "url": "https://localhost",
      "description": "Local Development Server"
    }
  ],
  "paths": {
    "/v1/healthcare/simulate": {
      "post": {
        "summary": "Simulate healthcare scenario",
        "description": "Process a healthcare simulation scenario using advanced medical LLM model",
        "operationId": "simulate_healthcare_scenario",
        "tags": ["Healthcare Simulation"],
        "security": [{"APIKeyHeader": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimulationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful simulation response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimulationResponse"
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/UnauthorizedError"},
          "500": {"$ref": "#/components/responses/ServerError"}
        }
      }
    },
    "/v1/ollama/generate": {
      "post": {
        "summary": "Generate medical response",
        "description": "Generate medical response using Ollama model",
        "operationId": "generate_response",
        "tags": ["Ollama Integration"],
        "security": [{"APIKeyHeader": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Generated response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateResponse"
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/UnauthorizedError"},
          "500": {"$ref": "#/components/responses/ServerError"}
        }
      }
    },
    "/v1/ollama/chat": {
      "post": {
        "summary": "Interactive medical chat",
        "description": "Start or continue a medical chat session",
        "operationId": "chat",
        "tags": ["Ollama Integration"],
        "security": [{"APIKeyHeader": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponse"
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/UnauthorizedError"},
          "500": {"$ref": "#/components/responses/ServerError"}
        }
      }
    },
    "/v1/custom-gpt/process": {
      "post": {
        "summary": "Process custom GPT request",
        "description": "Process a request using the Ollama healthcare model",
        "operationId": "process_gpt_request",
        "tags": ["Custom GPT Integration"],
        "security": [{"APIKeyHeader": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomGPTRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomGPTResponse"
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/UnauthorizedError"},
          "500": {"$ref": "#/components/responses/ServerError"}
        }
      }
    },
    "/v1/custom-gpt/capabilities": {
      "get": {
        "summary": "Get model capabilities",
        "description": "Get available model capabilities and endpoints",
        "operationId": "get_capabilities",
        "tags": ["Custom GPT Integration"],
        "responses": {
          "200": {
            "description": "Model capabilities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "available_models": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "capabilities": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "optimized_for_m3": {
                            "type": "boolean"
                          },
                          "metal_enabled": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "endpoints": {
                      "type": "object",
                      "properties": {
                        "generate": {
                          "type": "string"
                        },
                        "chat": {
                          "type": "string"
                        },
                        "simulate": {
                          "type": "string"
                        },
                        "validate": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health check",
        "description": "Check the health status of the API and its components including Ollama integration",
        "operationId": "health_check",
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "System health status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": ["healthy", "unhealthy"]
                    },
                    "components": {
                      "type": "object",
                      "properties": {
                        "api": {
                          "type": "string",
                          "enum": ["up", "down"]
                        },
                        "database": {
                          "type": "string",
                          "enum": ["up", "down"]
                        },
                        "ollama": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "enum": ["up", "down"]
                            },
                            "base_url": {
                              "type": "string"
                            },
                            "models": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "m3_optimized": {
                              "type": "boolean"
                            },
                            "metal_enabled": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "performance": {
                      "type": "object",
                      "properties": {
                        "metal_framework": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean"
                            },
                            "device": {
                              "type": "integer"
                            },
                            "compute_units": {
                              "type": "string"
                            },
                            "memory_limit": {
                              "type": "string"
                            },
                            "precision": {
                              "type": "string"
                            }
                          }
                        },
                        "resource_usage": {
                          "type": "object",
                          "properties": {
                            "cpu_percent": {
                              "type": "number"
                            },
                            "memory_percent": {
                              "type": "number"
                            },
                            "gpu_utilization": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SimulationRequest": {
        "type": "object",
        "required": ["scenario", "title", "actors"],
        "properties": {
          "scenario": {
            "type": "string",
            "description": "Healthcare scenario to simulate"
          },
          "title": {
            "type": "string",
            "description": "Title of the simulation scenario"
          },
          "actors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of actors involved in the scenario"
          },
          "patient_data": {
            "$ref": "#/components/schemas/PatientData"
          }
        }
      },
      "SimulationResponse": {
        "type": "object",
        "properties": {
          "diagnosis": {
            "type": "string",
            "description": "Preliminary diagnosis"
          },
          "recommended_actions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vital_signs": {
            "$ref": "#/components/schemas/VitalSigns"
          },
          "risk_assessment": {
            "type": "string"
          }
        }
      },
      "GenerateRequest": {
        "type": "object",
        "required": ["prompt", "model"],
        "properties": {
          "prompt": {
            "type": "string",
            "description": "The prompt to generate a response for"
          },
          "model": {
            "type": "string",
            "description": "The Ollama model to use",
            "default": "healthcare-llm:latest"
          },
          "options": {
            "type": "object",
            "properties": {
              "temperature": {
                "type": "number",
                "description": "Sampling temperature",
                "default": 0.7
              },
              "max_tokens": {
                "type": "integer",
                "description": "Maximum tokens to generate",
                "default": 2048
              }
            }
          }
        }
      },
      "GenerateResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string",
            "description": "Generated response text"
          },
          "model": {
            "type": "string",
            "description": "Model used for generation"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "done": {
            "type": "boolean"
          },
          "context": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "total_duration": {
            "type": "integer",
            "description": "Total processing time in milliseconds"
          }
        }
      },
      "ChatRequest": {
        "type": "object",
        "required": ["messages", "model"],
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["role", "content"],
              "properties": {
                "role": {
                  "type": "string",
                  "enum": ["system", "user", "assistant"]
                },
                "content": {
                  "type": "string"
                }
              }
            }
          },
          "model": {
            "type": "string",
            "description": "The Ollama model to use",
            "default": "healthcare-llm:latest"
          },
          "options": {
            "type": "object",
            "properties": {
              "temperature": {
                "type": "number",
                "default": 0.7
              },
              "max_tokens": {
                "type": "integer",
                "default": 2048
              }
            }
          }
        }
      },
      "ChatResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "object",
            "properties": {
              "role": {
                "type": "string",
                "enum": ["assistant"]
              },
              "content": {
                "type": "string"
              }
            }
          },
          "model": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "done": {
            "type": "boolean"
          },
          "total_duration": {
            "type": "integer",
            "description": "Total processing time in milliseconds"
          }
        }
      },
      "CustomGPTRequest": {
        "type": "object",
        "required": ["input", "capabilities"],
        "properties": {
          "input": {
            "type": "string",
            "description": "User input to process"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of capabilities to use"
          },
          "context": {
            "type": "object",
            "description": "Additional context for processing"
          }
        }
      },
      "CustomGPTResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string",
            "description": "Generated response"
          },
          "capabilities_used": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "confidence": {
            "type": "number",
            "description": "Confidence score of the response",
            "minimum": 0,
            "maximum": 1
          },
          "processing_time": {
            "type": "number",
            "description": "Time taken to process in seconds"
          }
        }
      },
      "PatientData": {
        "type": "object",
        "properties": {
          "age": {
            "type": "integer"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female", "other"]
          },
          "vital_signs": {
            "$ref": "#/components/schemas/VitalSigns"
          }
        }
      },
      "VitalSigns": {
        "type": "object",
        "properties": {
          "heart_rate": {
            "type": "integer"
          },
          "blood_pressure": {
            "type": "object",
            "properties": {
              "systolic": {
                "type": "integer"
              },
              "diastolic": {
                "type": "integer"
              }
            }
          },
          "respiratory_rate": {
            "type": "integer"
          },
          "temperature": {
            "type": "number"
          },
          "oxygen_saturation": {
            "type": "integer"
          }
        }
      },
      "GenerationOptions": {
        "type": "object",
        "properties": {
          "temperature": {
            "type": "number",
            "minimum": 0,
            "maximum": 2
          },
          "top_p": {
            "type": "number",
            "minimum": 0,
            "maximum": 1
          }
        }
      },
      "ChatMessage": {
        "type": "object",
        "required": ["role", "content"],
        "properties": {
          "role": {
            "type": "string",
            "enum": ["system", "user", "assistant"]
          },
          "content": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": ["code", "message"],
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Invalid API key",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "APIKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    }
  }
}

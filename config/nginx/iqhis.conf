# IQHIS API Nginx Configuration
# Environment: Production
# Version: 0.1.0-sprint.0

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=120r/m;
limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/s;

# SSL configuration
ssl_protocols TLSv1.3;
ssl_prefer_server_ciphers off;
ssl_session_timeout 1d;
ssl_session_cache shared:SSL:50m;
ssl_session_tickets off;
ssl_stapling on;
ssl_stapling_verify on;

# Production API Server
server {
    listen 443 ssl http2;
    server_name api.iqhis.com;

    # SSL certificates
    ssl_certificate /etc/letsencrypt/live/api.iqhis.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.iqhis.com/privkey.pem;

    # Security headers
    add_header Strict-Transport-Security "max-age=63072000" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "default-src 'none'; frame-ancestors 'none'";

    # Logging
    access_log /var/log/nginx/api.iqhis.access.log combined buffer=512k flush=1m;
    error_log /var/log/nginx/api.iqhis.error.log warn;

    # API endpoints
    location /v1/ {
        # Rate limiting
        limit_req zone=api_limit burst=20 nodelay;

        # Proxy settings
        proxy_pass http://localhost:8000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # CORS headers
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $http_origin;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
            add_header 'Access-Control-Max-Age' 86400;
            return 204;
        }
        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
    }

    # Health check endpoint (public)
    location /v1/quantum/health {
        limit_req zone=api_limit burst=10 nodelay;
        proxy_pass http://localhost:8000;
        proxy_set_header Host $host;
        add_header 'Access-Control-Allow-Origin' '*' always;
    }

    # Protected endpoints
    location ~ ^/v1/(quantum/encrypt|metrics) {
        limit_req zone=api_limit burst=5 nodelay;
        proxy_pass http://localhost:8000;
        proxy_set_header Host $host;
        
        # JWT validation
        auth_jwt on;
        auth_jwt_key_file /etc/nginx/jwt_pub.key;
    }
} 
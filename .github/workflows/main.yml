name: Healthcare Simulation API CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run tests
      run: |
        pytest tests/ -v

  deploy:
    needs: test
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - name: Check Render service status
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      run: |
        SERVICE_ID="${{ secrets.RENDER_SERVICE_ID }}"
        echo "Checking service status..."
        STATUS=$(curl -s -H "Authorization: Bearer $RENDER_API_KEY" \
          "https://api.render.com/v1/services/$SERVICE_ID" | jq -r '.status')
        echo "Current service status: $STATUS"
        
    - name: Deploy to Render
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      run: |
        SERVICE_ID="${{ secrets.RENDER_SERVICE_ID }}"
        echo "Triggering deploy..."
        DEPLOY_RESPONSE=$(curl -s -X POST \
          -H "Authorization: Bearer $RENDER_API_KEY" \
          -H "Content-Type: application/json" \
          "https://api.render.com/v1/services/$SERVICE_ID/deploys")
        echo "Deploy triggered: $DEPLOY_RESPONSE"
        
    - name: Wait for deployment
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      run: |
        SERVICE_ID="${{ secrets.RENDER_SERVICE_ID }}"
        echo "Waiting for deployment to complete..."
        for i in {1..30}; do
          STATUS=$(curl -s -H "Authorization: Bearer $RENDER_API_KEY" \
            "https://api.render.com/v1/services/$SERVICE_ID" | jq -r '.status')
          if [ "$STATUS" = "live" ]; then
            echo "Deployment successful!"
            exit 0
          fi
          echo "Current status: $STATUS. Waiting..."
          sleep 10
        done
        echo "Deployment timed out"
        exit 1 